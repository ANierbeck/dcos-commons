name: hello-world
scheduler:
  principal: {{SERVICE_PRINCIPAL}}
  user: {{SERVICE_USER}}
pods:
  podA:
    container:
      image-name: ubuntu:14.04
    count: {{HELLO_COUNT}}
    placement: {{HELLO_PLACEMENT}}
    secrets:
      s1:
        secret: hello-world/secret1
        env-key: SECRET1_ENV
        file: SECRET1_FILE
      s2:
        secret: hello-world/secret2
        file: SECRET2_FILE
    tasks:
      hello-server:
        goal: RUNNING
        cmd: >
                env &&
                ls -laR &&
                ( if [ -f hello-server-secret-FILE ] ; then cat *-FILE ; fi ) &&
                cat SECRET*_FILE &&
                ( if [ -f hello-server-secret-FILE ] ; then cat *-FILE ; fi ) &&
                echo hello >> hello-container-path/output && sleep $SLEEP_DURATION
        cpus: {{HELLO_CPUS}}
        memory: {{HELLO_MEM}}
        volume:
          path: hello-container-path
          type: ROOT
          size: {{HELLO_DISK}}
        env:
          SLEEP_DURATION: {{SLEEP_DURATION}}
        health-check:
          cmd: stat hello-container-path/output
          interval: 5
          grace-period: 30
          delay: 0
          timeout: 10
          max-consecutive-failures: 3
      world-server:
        goal: RUNNING
        cmd: >
               env &&
               ls -alR &&
               cat SECRET*_FILE &&
               ( if [ -f world-server-secret-FILE ] ; then cat *-FILE ; fi ) &&
               echo world1 >> world-container-path1/output &&
               echo world2 >> world-container-path2/output &&
               sleep $SLEEP_DURATION
        cpus: {{WORLD_CPUS}}
        memory: {{WORLD_MEM}}
        volumes:
          vol1:
            path: world-container-path1
            type: ROOT
            size: {{HELLO_DISK}}
          vol2:
            path: world-container-path2
            type: ROOT
            size: {{HELLO_DISK}}
        env:
          SLEEP_DURATION: {{SLEEP_DURATION}}
        readiness-check:
          cmd: BYTES="$(wc -c world-container-path2/output | awk '{print $1;}')" && [ $BYTES -gt 0 ]
          interval: 5
          delay: 0
          timeout: 10
  podB:
    count: {{HELLO_COUNT}}
    placement: {{HELLO_PLACEMENT}}
    secrets:
      s1:
        secret: hello-world/secret1
        env-key: SECRET1_ENV
        file: SECRET1_FILE
      s2:
        secret: hello-world/secret2
        file: SECRET2_FILE
    tasks:
      hello-server:
        goal: RUNNING
        cmd: >
               env &&
               ls -laR &&
               ls -la .secret &&
               cat SECRET*_FILE &&
               ( if [ -f hello-server-secret-FILE ] ; then cat *-FILE ; fi ) &&
               echo hello >> hello-container-path/output && sleep $SLEEP_DURATION
        cpus: {{HELLO_CPUS}}
        memory: {{HELLO_MEM}}
        volume:
          path: hello-container-path
          type: ROOT
          size: {{HELLO_DISK}}
        env:
          SLEEP_DURATION: {{SLEEP_DURATION}}
        health-check:
          cmd: stat hello-container-path/output
          interval: 5
          grace-period: 30
          delay: 0
          timeout: 10
          max-consecutive-failures: 3
      world-server:
        goal: RUNNING
        cmd: >
            env &&
            ls -alR &&
            cat SECRET*_FILE &&
            ( if [ -f world-server-secret-FILE ] ; then cat *-FILE ; fi ) &&
            echo world1 >> world-container-path1/output &&
            echo world2 >> world-container-path2/output &&
            sleep $SLEEP_DURATION
        cpus: {{WORLD_CPUS}}
        memory: {{WORLD_MEM}}
        volumes:
          vol1:
            path: world-container-path1
            type: ROOT
            size: {{HELLO_DISK}}
          vol2:
            path: world-container-path2
            type: ROOT
            size: {{HELLO_DISK}}
        env:
          SLEEP_DURATION: {{SLEEP_DURATION}}
        readiness-check:
          cmd: BYTES="$(wc -c world-container-path2/output | awk '{print $1;}')" && [ $BYTES -gt 0 ]
          interval: 5
          delay: 0
          timeout: 10