{
  "type":"object",
    "properties":{
      "service":{
        "type":"object",
        "description": "DC/OS service configuration properties",
        "properties":{
          "name" : {
            "description":"The name of the service instance",
            "type":"string",
            "default":"redis"
          },
          "spec_file" : {
            "description":"The name of the service spec yaml file.",
            "type":"string",
            "default":"svc.yml"
          },
          "cmd_prefix" : {
            "description":"A generic prefix to start the scheduler.",
            "type":"string",
            "default":"export LD_LIBRARY_PATH=$MESOS_SANDBOX/libmesos-bundle/lib:$LD_LIBRARY_PATH; export MESOS_NATIVE_JAVA_LIBRARY=$(ls $MESOS_SANDBOX/libmesos-bundle/lib/libmesos-*.so); export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/); export JAVA_HOME=${JAVA_HOME%/}; export PATH=$(ls -d $JAVA_HOME/bin):$PATH"
          },
          "secret_name": {
            "description":"Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
            "type":"string",
            "default":""
          },
          "user": {
            "description": "The user that the service will run as.",
            "type": "string",
            "default": "root"
          },
          "principal": {
            "description": "The principal for the service instance.",
            "type": "string",
            "default": ""
          },
          "placement_constraint": {
            "description":"Marathon-style placement constraint for Redis nodes. Example: rack_id:LIKE:rack-foo-.*,rack_id:MAX_PER:2",
            "type":"string",
            "default":""
          }
        }
      },
      "redis":{
        "description":"Redis configuration properties",
        "type":"object",
        "properties":{
          "count":{
            "description":"Number of Redis nodes to run",
            "type":"integer",
            "default":3
          },
          "license_key":{
            "description":"Redis Pack License Key",
            "type":"string",
            "default":"a-valid-key"
          },
          "admin_username":{
            "description":"Redis Administrator username",
            "type":"string",
            "default":"insecure"
          },
          "admin_password":{
            "description":"Redis Administrator password",
            "type":"string",
            "default":"insecure"
          },
          "custom_fqdn":{
            "description":"Custom Redis name/FQDN (default: '<service-name>.redis')",
            "type":"string",
            "default":""
          },
          "debug":{
            "description":"Enables debug logging in redis when non-empty",
            "type":"string",
            "default":"y"
          }
        },
        "required":[
          "count",
          "license_key",
          "admin_username",
          "admin_password"
        ]
      },
      "resources":{
        "description":"Redis resource configuration",
        "type":"object",
        "properties":{
          "cpus":{
            "description":"Redis CPU requirements",
            "type":"number",
            "default":3.5
          },
          "mem":{
            "description":"Redis mem requirements (in MB)",
            "type":"integer",
            "default":8192
          },
          "disk":{
            "description":"Redis persistent disk requirements (in MB)",
            "type":"integer",
            "default":32768
          },
          "ports_external_min":{
            "description":"Start of port range to expose to clients",
            "type":"integer",
            "default":10000
          },
          "ports_external_max":{
            "description":"End of port range to expose to clients",
            "type":"integer",
            "default":10100
          },
          "ports_internal_min":{
            "description":"Start of port range to use internally with shards",
            "type":"integer",
            "default":20000
          },
          "ports_internal_max":{
            "description":"End of port range to use internally with shards",
            "type":"integer",
            "default":20200
          }
        },
        "required":[
          "cpus",
          "mem",
          "disk",
          "ports_external_min",
          "ports_external_max",
          "ports_internal_min",
          "ports_internal_max"
        ]
      }
    }
}
